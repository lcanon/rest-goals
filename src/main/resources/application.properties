quarkus.http.port=8081
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
%dev.quarkus.log.console.level=DEBUG
quarkus.log.console.color=true

quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes-client.namespace=${PROJECT_NAME:frontdev2ops}
quarkus.openshift.expose=true

### DATABASE
# The datasource URL
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:postgresql}.${PROJECT_NAME:frontdev2ops}:${DB_PORT:5432}/${DB_NAME:postgresql}
# The kind of database we will connect to (e.g. h2, postgresql...).
quarkus.datasource.db-kind=postgresql
# The datasource username
quarkus.datasource.username=${DB_USER:postgresql}
# The datasource password
quarkus.datasource.password=${DB_PASS:postgresql}
# The datasource pool maximum size
quarkus.datasource.max-size=8
# The datasource pool minimum size
quarkus.datasource.min-size=2
# Select whether the database schema is generated or not. drop-and-create is awesome in development mode. Accepted values: none, create, drop-and-create, drop, update.
quarkus.hibernate-orm.database.generation=create
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.database.generation=drop-and-create
# Shows SQL generated
%dev.quarkus.hibernate-orm.log.sql=true
